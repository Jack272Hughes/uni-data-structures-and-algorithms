@startuml

participant Application
participant ProductsParser
participant CostsParser
participant Resources

Application --> ProductsParser: parse(products directory)
ProductsParser --> Resources: getProductFiles()
ProductsParser <-- Resources: return product files
loop for each file
  ProductsParser --> ProductsParser: parseProducts()
  alt successful case
    ProductsParser --> ProductsParser: add to product nodes array
  else invalid format (e.g. indentation)
    ProductsParser --> ProductsParser: throw invalid format exception
  end
end

Application <-- ProductsParser: return product nodes array

Application --> CostsParser: parse(costs file)
CostsParser --> Resources: getCostsFile()
CostsParser <-- Resources: return costs file
CostsParser --> CostsParser: parseCosts()
alt successful case
  Application <-- CostsParser: return costs hashmap
else invalid format (e.g. negative or non-int cost)
  Application <-- CostsParser: throw invalid format exception
end

loop for each product
  Application --> Application: calculateProduct()
  alt successful case
    Application --> Application: add product cost to map
  else no cost found for last node
    Application --> Application: throw cost not found exception
  end
end

Application --> Application: print product costs map

@enduml
