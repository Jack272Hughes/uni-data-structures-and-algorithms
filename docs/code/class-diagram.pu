@startuml

class Link<V> {
  +V value
  +Link<V> next
  +V value()
  +Link<V> next()
}

class HashMap<V> {
  +Entry<V>[] valueStore
  +void put(String key, V value)
  +Optional<V> get(String key)
  +String toString()
}

class Entry<V> {
  +String key
  +String key()
}

class LinkedStack<V> {
  +Link<V> top
  +int size
  +void add(V value)
  +void addAll(LinkedStack<V>)
  +Optional<V> pop()
  +Optional<V> peek()
  +boolean isEmpty()
}

class Node {
  +String name
  +Node parent
  +LinkedStack<Node> children
  +String name()
  +Node parent()
  +LinkedStack<Node> children()
  +void addChild(Node child)
}

class ProductsParser {
  +int indent
  +Node[] parse(String directory)
}

class CostsParser {
  +HashMap<int> parse(String file)
}

class Application {
  +ProductsParser productsParser
  +CostsParser costsParser
  +HashMap<int> calculateProductCosts(productsDirectory, costsFile)
  +int calculateProduct(Node product)
}

HashMap *-- Entry
LinkedStack *-- Link
Link <|-left- Entry

ProductsParser *-- Node
CostsParser *-- HashMap
Application *-- LinkedStack
LinkedStack -right-* Node

Application *-- ProductsParser
Application *-- CostsParser
Application *-- HashMap

hide circle

@enduml
